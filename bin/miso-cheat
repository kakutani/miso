#!/bin/env ruby
# coding: utf-8
# vim:set ft=ruby:

if RUBY_VERSION < "1.9.0"
  $KCODE = "u"
end

module Miso
  class Cheat
    def initialize
      @container = {:Given => [], :Then => [], :When => []}
    end

    def require(*noop); end

    def Given(re, *noop); @container[:Given] << re; end
    def When(re, *noop);  @container[:When] << re; end
    def Then(re, *noop);  @container[:Then] << re; end

    def display
      [:Given, :When, :Then].each do |type|
        @container[type].each{|step_re| puts format(type, step_re) }
        puts # blank line
      end
    end
    private
    def cleanup(regexp)
      regexp.to_s.sub(/\A\(\?-mix:(.+)\)\Z/){ $1 }
    end

    def format(type, re)
      "  #{type.to_s}\t #{cleanup(re)}" 
    end
  end
end

Dir.glob( File.expand_path("../rails_generators/miso/templates/*_steps.rb", File.dirname(__FILE__)) ) do |step|
  cheat = Miso::Cheat.new
  cheat.instance_eval File.read(step)
  puts "in `%s`:" % step
  cheat.display
end

